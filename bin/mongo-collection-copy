#!/usr/bin/env ruby

require File.expand_path('../../lib/mongo_collection_copy', __FILE__)
require 'optparse'

options = {}

parser = OptionParser.new do |opts|
  opts.on "-s", "--source MONGOURL", "Source MongoDB connection URL" do |arg|
    options[:source] = arg
  end

  opts.on "-d", "--destination MONGOURL", "Destination MongoDB connection URL" do |arg|
    options[:destination] = arg
  end

  opts.on "-c", "--collection COLLECTION_NAME", "Collection name to be copied" do |arg|
    options[:collection] = arg
  end

  opts.on "-f", "--finder FINDER", "Finder strategy to use (max_id or enumerate)" do |arg|
    options[:finder] = arg.to_sym
  end
end

parser.banner = "mongo-collection-copy [options]"

parser.on_tail "-h", "--help", "Show help" do
  puts parser
  exit 1
end

parser.parse(ARGV)
options[:finder] ||= :max_id

[:source, :destination, :collection].each do |required|
  unless options.key?(required)
    puts parser
    puts ""
    puts "Connection URLs can be given in the format:"
    puts "  mongodb://[username:password@]host[:port]/database"
    puts "For example, a local connection without authentication:"
    puts "  mongodb://localhost:27017/test"
    puts ""
    puts "ERROR: --#{required} is a required argument."
    exit 1
  end
end

print "\nConnecting..."
copier = MongoCollectionCopy::Copier.new(options[:source],
                                         options[:destination],
                                         options[:collection],
                                         options[:finder])
puts "CONNECTED!"

class StatsPrinter
  class << self
    def print_stats(copier)
      puts "%-24s %s" % ["Source Documents:", copier.total_source_documents]
      puts "%-24s %s" % ["Destination Documents:", copier.total_dest_documents]
      puts ""
    end
  end
end

puts "\nCalculating start and end points..."
puts ""
StatsPrinter.print_stats(copier)

trap("INT") do
  puts "Copy has been terminated!"
  puts ""
  StatsPrinter.print_stats(copier)
  exit 0
end

copier.run
puts "Copy has completed!"
puts ""
StatsPrinter.print_stats(copier)

# vim: set ft=ruby:
